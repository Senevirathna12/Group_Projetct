@page "/teachersList"


@using ERP.Application.StaffApp.Interfaces.UsersManagement
@using ERP.Domain.Core.Entity
@using FluentValidation

@inject IViewTeacherByNameUseCase ViewTeacherByNameUseCase
@inject IDeleteTeacherUseCase DeleteTeacherUseCase



<div style="text-align: center; margin-bottom: 0;">
    <h2><u>TEACHER'S LIST</u></h2>
</div>


<MudTable Items="@_teachers" Class="custom-table">
    <HeaderContent>
        <MudTh >ID</MudTh>
        <MudTh>Full Name</MudTh>
        <MudTh>E-mail</MudTh>
        
        <MudTh>District</MudTh>
        <MudTh>Mobile</MudTh>
        <MudTh>NationalID</MudTh>
        <MudTh >Action</MudTh>

    </HeaderContent>
    <RowTemplate>
            <MudTd DataLabel="id">@context.TeacherId</MudTd>
            <MudTd DataLabel="fullname">@context.FirstName @context.LastName</MudTd>
            <MudTd DataLabel="email">@context.Email</MudTd>
            <MudTd DataLabel="district">@context.District</MudTd>     
            <MudTd DataLabel="phonenb">@context.PhoneNumber</MudTd>
            <MudTd DataLabel="nationalid">@context.NationalID</MudTd>


            <MudTd DataLabel="">
                <MudFab OnClick="@(()=> {})" Color="Color.Primary"
                        StartIcon="@Icons.Material.Filled.Edit" Size="Size.Small" />
                <MudFab Color="Color.Warning" StartIcon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="@(()=> DeleteTeacher(@context))" />
                <MudFab Color="Color.Success" StartIcon="@Icons.Material.Outlined.PermIdentity" Size="Size.Small" />
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>

    <style>
        .custom-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

            .custom-table th, .custom-table td {
                border: 1px solid #ddd;
                padding: 8px;
            }

            .custom-table th {
                background-color: #f6efef;
                color: #000000;
                font-size: large;
                font-weight: 600;
                font-family: sans-serif;
            }

            .custom-table td {
                background-color: #54a3c2;
                color: #000000;
            }
    </style>


@code {
    private List<Teacher> _teachers = new List<Teacher>();

    [Parameter]

    public string SearchTerm { get; set; } = string.Empty;

    // protected override async Task OnInitializedAsync()
    // {
    //     _teachers = (await ViewTeacherByNameUseCase.ExecuteAsync("")).ToList();

    // }

    // protected override async Task OnParametersSetAsync()
    // {
    //     _teachers = (await ViewTeacherByNameUseCase.ExecuteAsync(SearchTerm)).ToList();

    // }

    

    

    protected override async Task OnInitializedAsync()
    {
        await LoadTeachers();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadTeachers();
    }

    private async Task LoadTeachers()
    {
        _teachers = (await ViewTeacherByNameUseCase.ExecuteAsync(SearchTerm)).ToList();
    }

    private async Task DeleteTeacher(Teacher teacher)
    {
        // Call the delete use case to delete the teacher
        await DeleteTeacherUseCase.ExecuteAsync(teacher);

        // Reload the teachers list after deletion
        await LoadTeachers();
    }

}
